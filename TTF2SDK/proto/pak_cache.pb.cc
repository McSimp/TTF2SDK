// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pak_cache.proto

#include "pak_cache.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ttf2sdk {
class MaterialDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaterialData>
      _instance;
} _MaterialData_default_instance_;
class PakCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PakCache>
      _instance;
} _PakCache_default_instance_;
}  // namespace ttf2sdk
namespace protobuf_pak_5fcache_2eproto {
void InitDefaultsMaterialDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ttf2sdk::_MaterialData_default_instance_;
    new (ptr) ::ttf2sdk::MaterialData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ttf2sdk::MaterialData::InitAsDefaultInstance();
}

void InitDefaultsMaterialData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMaterialDataImpl);
}

void InitDefaultsPakCacheImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pak_5fcache_2eproto::InitDefaultsMaterialData();
  {
    void* ptr = &::ttf2sdk::_PakCache_default_instance_;
    new (ptr) ::ttf2sdk::PakCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ttf2sdk::PakCache::InitAsDefaultInstance();
}

void InitDefaultsPakCache() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPakCacheImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, pakfiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, shadernames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::MaterialData, textures_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::PakCache, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::PakCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::PakCache, cacheversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::PakCache, gamebuild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ttf2sdk::PakCache, materials_),
  1,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ttf2sdk::MaterialData)},
  { 13, 21, sizeof(::ttf2sdk::PakCache)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ttf2sdk::_MaterialData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ttf2sdk::_PakCache_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pak_cache.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017pak_cache.proto\022\007ttf2sdk\"U\n\014MaterialDa"
      "ta\022\014\n\004name\030\001 \002(\t\022\020\n\010pakFiles\030\002 \003(\t\022\023\n\013sh"
      "aderNames\030\003 \003(\t\022\020\n\010textures\030\004 \003(\t\"]\n\010Pak"
      "Cache\022\024\n\014cacheVersion\030\001 \002(\005\022\021\n\tgameBuild"
      "\030\002 \002(\t\022(\n\tmaterials\030\003 \003(\0132\025.ttf2sdk.Mate"
      "rialData"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 208);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pak_cache.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pak_5fcache_2eproto
namespace ttf2sdk {

// ===================================================================

void MaterialData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialData::kNameFieldNumber;
const int MaterialData::kPakFilesFieldNumber;
const int MaterialData::kShaderNamesFieldNumber;
const int MaterialData::kTexturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialData::MaterialData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pak_5fcache_2eproto::InitDefaultsMaterialData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttf2sdk.MaterialData)
}
MaterialData::MaterialData(const MaterialData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pakfiles_(from.pakfiles_),
      shadernames_(from.shadernames_),
      textures_(from.textures_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ttf2sdk.MaterialData)
}

void MaterialData::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MaterialData::~MaterialData() {
  // @@protoc_insertion_point(destructor:ttf2sdk.MaterialData)
  SharedDtor();
}

void MaterialData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MaterialData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaterialData::descriptor() {
  ::protobuf_pak_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pak_5fcache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialData& MaterialData::default_instance() {
  ::protobuf_pak_5fcache_2eproto::InitDefaultsMaterialData();
  return *internal_default_instance();
}

MaterialData* MaterialData::New(::google::protobuf::Arena* arena) const {
  MaterialData* n = new MaterialData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaterialData::Clear() {
// @@protoc_insertion_point(message_clear_start:ttf2sdk.MaterialData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pakfiles_.Clear();
  shadernames_.Clear();
  textures_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MaterialData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttf2sdk.MaterialData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ttf2sdk.MaterialData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string pakFiles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pakfiles()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pakfiles(this->pakfiles_size() - 1).data(),
            static_cast<int>(this->pakfiles(this->pakfiles_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ttf2sdk.MaterialData.pakFiles");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string shaderNames = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_shadernames()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shadernames(this->shadernames_size() - 1).data(),
            static_cast<int>(this->shadernames(this->shadernames_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ttf2sdk.MaterialData.shaderNames");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string textures = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_textures()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->textures(this->textures_size() - 1).data(),
            static_cast<int>(this->textures(this->textures_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ttf2sdk.MaterialData.textures");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttf2sdk.MaterialData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttf2sdk.MaterialData)
  return false;
#undef DO_
}

void MaterialData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttf2sdk.MaterialData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string pakFiles = 2;
  for (int i = 0, n = this->pakfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pakfiles(i).data(), static_cast<int>(this->pakfiles(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.pakFiles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pakfiles(i), output);
  }

  // repeated string shaderNames = 3;
  for (int i = 0, n = this->shadernames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shadernames(i).data(), static_cast<int>(this->shadernames(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.shaderNames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->shadernames(i), output);
  }

  // repeated string textures = 4;
  for (int i = 0, n = this->textures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->textures(i).data(), static_cast<int>(this->textures(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.textures");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->textures(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ttf2sdk.MaterialData)
}

::google::protobuf::uint8* MaterialData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ttf2sdk.MaterialData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string pakFiles = 2;
  for (int i = 0, n = this->pakfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pakfiles(i).data(), static_cast<int>(this->pakfiles(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.pakFiles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->pakfiles(i), target);
  }

  // repeated string shaderNames = 3;
  for (int i = 0, n = this->shadernames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shadernames(i).data(), static_cast<int>(this->shadernames(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.shaderNames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->shadernames(i), target);
  }

  // repeated string textures = 4;
  for (int i = 0, n = this->textures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->textures(i).data(), static_cast<int>(this->textures(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.MaterialData.textures");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->textures(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ttf2sdk.MaterialData)
  return target;
}

size_t MaterialData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttf2sdk.MaterialData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated string pakFiles = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pakfiles_size());
  for (int i = 0, n = this->pakfiles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pakfiles(i));
  }

  // repeated string shaderNames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->shadernames_size());
  for (int i = 0, n = this->shadernames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->shadernames(i));
  }

  // repeated string textures = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->textures_size());
  for (int i = 0, n = this->textures_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->textures(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaterialData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttf2sdk.MaterialData)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttf2sdk.MaterialData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttf2sdk.MaterialData)
    MergeFrom(*source);
  }
}

void MaterialData::MergeFrom(const MaterialData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttf2sdk.MaterialData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pakfiles_.MergeFrom(from.pakfiles_);
  shadernames_.MergeFrom(from.shadernames_);
  textures_.MergeFrom(from.textures_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void MaterialData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttf2sdk.MaterialData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialData::CopyFrom(const MaterialData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttf2sdk.MaterialData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MaterialData::Swap(MaterialData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialData::InternalSwap(MaterialData* other) {
  using std::swap;
  pakfiles_.InternalSwap(&other->pakfiles_);
  shadernames_.InternalSwap(&other->shadernames_);
  textures_.InternalSwap(&other->textures_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaterialData::GetMetadata() const {
  protobuf_pak_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pak_5fcache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PakCache::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PakCache::kCacheVersionFieldNumber;
const int PakCache::kGameBuildFieldNumber;
const int PakCache::kMaterialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PakCache::PakCache()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pak_5fcache_2eproto::InitDefaultsPakCache();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ttf2sdk.PakCache)
}
PakCache::PakCache(const PakCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      materials_(from.materials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamebuild_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamebuild()) {
    gamebuild_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamebuild_);
  }
  cacheversion_ = from.cacheversion_;
  // @@protoc_insertion_point(copy_constructor:ttf2sdk.PakCache)
}

void PakCache::SharedCtor() {
  _cached_size_ = 0;
  gamebuild_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cacheversion_ = 0;
}

PakCache::~PakCache() {
  // @@protoc_insertion_point(destructor:ttf2sdk.PakCache)
  SharedDtor();
}

void PakCache::SharedDtor() {
  gamebuild_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PakCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PakCache::descriptor() {
  ::protobuf_pak_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pak_5fcache_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PakCache& PakCache::default_instance() {
  ::protobuf_pak_5fcache_2eproto::InitDefaultsPakCache();
  return *internal_default_instance();
}

PakCache* PakCache::New(::google::protobuf::Arena* arena) const {
  PakCache* n = new PakCache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PakCache::Clear() {
// @@protoc_insertion_point(message_clear_start:ttf2sdk.PakCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  materials_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!gamebuild_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*gamebuild_.UnsafeRawStringPointer())->clear();
  }
  cacheversion_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PakCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ttf2sdk.PakCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cacheVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_cacheversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cacheversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string gameBuild = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamebuild()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamebuild().data(), static_cast<int>(this->gamebuild().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ttf2sdk.PakCache.gameBuild");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ttf2sdk.MaterialData materials = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_materials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ttf2sdk.PakCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ttf2sdk.PakCache)
  return false;
#undef DO_
}

void PakCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ttf2sdk.PakCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cacheVersion = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cacheversion(), output);
  }

  // required string gameBuild = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamebuild().data(), static_cast<int>(this->gamebuild().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.PakCache.gameBuild");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gamebuild(), output);
  }

  // repeated .ttf2sdk.MaterialData materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->materials(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ttf2sdk.PakCache)
}

::google::protobuf::uint8* PakCache::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ttf2sdk.PakCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 cacheVersion = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cacheversion(), target);
  }

  // required string gameBuild = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamebuild().data(), static_cast<int>(this->gamebuild().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ttf2sdk.PakCache.gameBuild");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gamebuild(), target);
  }

  // repeated .ttf2sdk.MaterialData materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->materials(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ttf2sdk.PakCache)
  return target;
}

size_t PakCache::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ttf2sdk.PakCache)
  size_t total_size = 0;

  if (has_gamebuild()) {
    // required string gameBuild = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gamebuild());
  }

  if (has_cacheversion()) {
    // required int32 cacheVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cacheversion());
  }

  return total_size;
}
size_t PakCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ttf2sdk.PakCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string gameBuild = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gamebuild());

    // required int32 cacheVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cacheversion());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .ttf2sdk.MaterialData materials = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->materials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->materials(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PakCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ttf2sdk.PakCache)
  GOOGLE_DCHECK_NE(&from, this);
  const PakCache* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PakCache>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ttf2sdk.PakCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ttf2sdk.PakCache)
    MergeFrom(*source);
  }
}

void PakCache::MergeFrom(const PakCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ttf2sdk.PakCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  materials_.MergeFrom(from.materials_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gamebuild();
      gamebuild_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamebuild_);
    }
    if (cached_has_bits & 0x00000002u) {
      cacheversion_ = from.cacheversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PakCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ttf2sdk.PakCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PakCache::CopyFrom(const PakCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ttf2sdk.PakCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PakCache::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->materials())) return false;
  return true;
}

void PakCache::Swap(PakCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PakCache::InternalSwap(PakCache* other) {
  using std::swap;
  materials_.InternalSwap(&other->materials_);
  gamebuild_.Swap(&other->gamebuild_);
  swap(cacheversion_, other->cacheversion_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PakCache::GetMetadata() const {
  protobuf_pak_5fcache_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pak_5fcache_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ttf2sdk

// @@protoc_insertion_point(global_scope)
